name: 'Build Windows executable'
on:
  push:
    tags:
      - '*_testing'
# on:
#   workflow_dispatch:
jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    # - name: Output release URL to file
    #   run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    # - name: Save release file
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: release_url
    #     path: release_url.txt
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    name: Build EXE
    needs: createrelease
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: pip install -r .github/workflows/requirements.txt
    - name: Build with pyinstaller
      run: pyinstaller --clean --noconfirm .github/workflows/JWLManager.exe.spec
    # - name: Load release file
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: release_url
    # - name: Get release URL
    #   id: get_release_info
    #   shell: bash
    #   run: |
    #     value=`cat release_url.txt`
    #     echo "{upload_url}={$value}" >> $GITHUB_OUTPUT
    # echo ::set-output name=upload_url::$value
    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.createrelease.outputs.release_url }}
        # upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/JWLManager.exe
        asset_name: JWLManager.exe
        asset_content_type: application/vnd.microsoft.portable-executable

