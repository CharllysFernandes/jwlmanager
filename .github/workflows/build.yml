name: 'Build Packages v0.0.4'

on:
  push:
    tags:
      - '*_testing'

jobs:

  build:
    name: Build EXE & ZIP
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    - name: Build with Pyinstaller
      run: | 
        pyinstaller --clean --noconfirm .github/workflows/JWLManager.exe.spec
        pyinstaller --noconfirm .github/workflows/JWLManager.zip.spec
    - name: Rename & zip folder
      run: |
        cd dist
        ren JWLManager.exe JWLManager_${{ github.ref_name }}.exe
        tar.exe -a -c -f JWLManager_${{ github.ref_name }}.zip JWLManager
    - name: Create release
      id: gh_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        draft: true
        prerelease: false
        body: |
          ____
          - Windows (stand-alone): [JWLManager_${{ github.ref_name }}.exe](${{ github.ref_name }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.exe)
          - Windows (zipped folder): [JWLManager_${{ github.ref_name }}.zip](${{ github.ref_name }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.zip)
          - macOS (zipped app): [JWLManager_${{ github.ref_name }}.app.zip](${{ github.ref_name }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.app.zip)
        files: |
          dist/JWLManager_${{ github.ref_name }}.exe
          dist/JWLManager_${{ github.ref_name }}.zip


# - os: macos-11
#   TARGET: macos
#   CMD_BUILD: >
#     pyinstaller -- clean --noconfirm JWLManager.app.spec &&
#     cd dist/ &&
#     zip -r9 JWLManager_${{ github.ref_name }} JWLManager.app/
#   OUT_APP: JWLManager_${{ github.ref_name }}.app.zip