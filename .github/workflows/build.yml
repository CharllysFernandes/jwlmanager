name: 'Build for Release v0.1.1'

on:
  workflow_dispatch:
    env:
      github.ref_name: v2.0.1_TESTING
  push:
    tags:
      - 'v*_testing'

jobs:

  windows:
    name: Build Windows EXE & ZIP
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    - name: Build with Pyinstaller
      run: | 
        pyinstaller --clean --noconfirm .github/workflows/JWLManager.exe.spec
        pyinstaller --noconfirm .github/workflows/JWLManager.zip.spec
    - name: Rename & zip folder
      run: |
        cd dist
        ren JWLManager.exe JWLManager_${{ github.ref_name }}.exe
        tar.exe -a -c -f JWLManager_${{ github.ref_name }}.zip JWLManager
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: win
        path: |
          dist/JWLManager_${{ github.ref_name }}.exe
          dist/JWLManager_${{ github.ref_name }}.zip

  macos:
    name: Build macOS APP
    runs-on: macos-11
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    - name: Build with Pyinstaller
      run: pyinstaller --clean --noconfirm .github/workflows/JWLManager.app.spec
    - name: Zip app
      run: |
        cd dist/
        zip -r9 JWLManager_${{ github.ref_name }}.app.zip JWLManager.app/
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: mac
        path: dist/JWLManager_${{ github.ref_name }}.app.zip

  linux:
    name: Build Linux BIN & Release
    needs: [windows, macos]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    - name: Build with Pyinstaller
      run: |
        pyinstaller --clean --noconfirm .github/workflows/JWLManager.bin.spec
        mv dist/JWLManager dist/JWLManager_${{ github.ref_name }}
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        draft: true
        prerelease: false
        body: |
          ____
          - Linux:
            - Stand-alone: [JWLManager_${{ github.ref_name }}](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }})
          - Windows 10/11:
            - Stand-alone: [JWLManager_${{ github.ref_name }}.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.exe)
            - Zipped folder: [JWLManager_${{ github.ref_name }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.zip)
          - macOS 11/12/13:
            - Zipped app: [JWLManager_${{ github.ref_name }}.app.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/JWLManager_${{ github.ref_name }}.app.zip)
        files: |
          dist/JWLManager_${{ github.ref_name }}
          win/JWLManager_${{ github.ref_name }}.exe
          win/JWLManager_${{ github.ref_name }}.zip
          mac/JWLManager_${{ github.ref_name }}.app.zip
