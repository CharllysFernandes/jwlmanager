name: 'Build for Release v0.1.1'

on:
  # push:
  #   tags:
  #     - 'v*_testing'
  #   inputs:
  #     tag: ${{ github.ref_name }}
  workflow_dispatch:
    # inputs:
    #   tag:
    #     description: 'Test tag'
    #     required: true
    #     default: 'v2.0.1_TESTING'
    #     type: string


jobs:

  # windows:
  #   name: Build Windows EXE & ZIP
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r .github/workflows/requirements.txt
  #   - name: Build with Pyinstaller
  #     run: | 
  #       pyinstaller --clean --noconfirm .github/workflows/JWLManager.exe.spec
  #       pyinstaller --noconfirm .github/workflows/JWLManager.zip.spec
  #   - name: Rename & zip folder
  #     run: |
  #       cd dist
  #       ren JWLManager.exe JWLManager_${{ github.event.inputs.tag }}.exe
  #       tar.exe -a -c -f JWLManager_${{ github.event.inputs.tag }}.zip JWLManager
  #   - name: Upload artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: win
  #       path: |
  #         dist/JWLManager_${{ github.event.inputs.tag }}.exe
  #         dist/JWLManager_${{ github.event.inputs.tag }}.zip
  # 
  # macos:
  #   name: Build macOS APP
  #   runs-on: macos-11
  #   steps:
  #   - name: Update system
  #     run: apt install libopengl0 libegl1
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r .github/workflows/requirements.txt
  #   - name: Build with Pyinstaller
  #     run: pyinstaller --clean --noconfirm .github/workflows/JWLManager.app.spec
  #   - name: Zip app
  #     run: |
  #       cd dist/
  #       zip -r9 JWLManager_${{ github.event.inputs.tag }}.app.zip JWLManager.app/
  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: mac
  #       path: dist/JWLManager_${{ github.event.inputs.tag }}.app.zip

  linux:
    name: Build Linux BIN & Release
    # needs: [windows, macos]
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .github/workflows/requirements.txt
    - name: Build with Pyinstaller
      run: |
        pyinstaller --clean --noconfirm .github/workflows/JWLManager.bin.spec
        mv dist/JWLManager dist/JWLManager_${{ github.event.inputs.tag }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bin
        path: JWLManager_${{ github.event.inputs.tag }}
    # - name: Download all artifacts
    #   uses: actions/download-artifact@v3
    # - name: Create release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ github.event.inputs.tag }}
    #     name: ${{ github.event.inputs.tag }}
    #     draft: true
    #     prerelease: false
    #     body: |
    #       ____
    #       - Linux:
    #         - Stand-alone: [JWLManager_${{ github.event.inputs.tag }}](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag }}/JWLManager_${{ github.event.inputs.tag }})
    #       - Windows 10/11:
    #         - Stand-alone: [JWLManager_${{ github.event.inputs.tag }}.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag }}/JWLManager_${{ github.event.inputs.tag }}.exe)
    #         - Zipped folder: [JWLManager_${{ github.event.inputs.tag }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag }}/JWLManager_${{ github.event.inputs.tag }}.zip)
    #       - macOS 11/12/13:
    #         - Zipped app: [JWLManager_${{ github.event.inputs.tag }}.app.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.tag }}/JWLManager_${{ github.event.inputs.tag }}.app.zip)
    #     files: |
    #       dist/JWLManager_${{ github.event.inputs.tag }}
    #       win/JWLManager_${{ github.event.inputs.tag }}.exe
    #       win/JWLManager_${{ github.event.inputs.tag }}.zip
    #       mac/JWLManager_${{ github.event.inputs.tag }}.app.zip
